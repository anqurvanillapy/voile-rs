//
// Created by Dependently-Typed Lambda Calculus on 2019-05-17
// dtlc
// Author: ice1000
//

val id: (A : Type) -> (a : A) -> A;
let id = \A a. a;

val flip : (A B C : Type)
         -> (f : (a : A) -> (b : B) -> C)
         -> ((b : B) -> (a : A) -> C);
// This does not check. Why?
let flip = \A B C f a b. id C (f b a);
